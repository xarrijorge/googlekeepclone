{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://googlekeepclone/./src/app.ts","webpack://googlekeepclone/./src/functions/display.ts","webpack://googlekeepclone/./src/functions/edit.ts","webpack://googlekeepclone/./src/functions/remove.ts","webpack://googlekeepclone/./src/main.ts","webpack://googlekeepclone/webpack/bootstrap","webpack://googlekeepclone/webpack/startup"],"sourcesContent":["import App from './main'\n\nnew App()\n","const renderNotes = (\n    $notes: HTMLDivElement,\n    $placeholder: { style: { display: string } },\n    state: { notes: any[] }\n) => {\n    window.localStorage.setItem('notes', JSON.stringify(state.notes))\n    displayNotes($notes, $placeholder, state)\n}\n\nconst displayNotes = (\n    $notes: HTMLDivElement,\n    $placeholder: { style: { display: string } },\n    state: { notes: any[] }\n) => {\n    const colors: string[] = ['seagreen', 'deeppink', 'rebeccapurple']\n    colors[Math.floor(Math.random() * colors.length)]\n    $notes.innerHTML = ''\n    $placeholder.style.display = 'none'\n    state.notes.forEach((note: any) => {\n        const $note = document.createElement('div')\n        $note.classList.add('note')\n        $note.dataset.id = note.id\n        $note.style.background = note.color\n        $note.innerHTML = `\n                <div class=\"note-header\">\n                    <h2 class=\"note-title\">${note.title}</h2>\n                                      \n                </div>\n                <div class=\"note-body\">\n                    <p class=\"note-text\">${note.text}</p>\n                </div>\n                <div class=\"toolbar\">\n                    <span class=\"toolbar-delete\" style=\"color: tomato\" >\n                        <i class=\"fas fa-trash\"></i>\n                    </span>\n                    <span class=\"toolbar-color\" style=\"color: ${\n                        colors[Math.floor(Math.random() * colors.length)]\n                    }\">\n                        <i class=\"fas fa-palette\"></i>\n                    </span>\n                   <span class=\"toolbar-edit\" style=\"color: skyblue\">\n                        <i class=\"fas fa-edit\"></i>\n                    </span>\n                </div>\n                <div id=\"color-tooltip\">\n                    <p class=\"color-option lightslategray\" data-color=\"white\"></p>\n                    <p class=\"color-option lightcoral\" data-color=\"lightcoral\"></p>\n                    <p class=\"color-option lightseagreen\" data-color=\"lightseagreen\"></p>\n                    <p class=\"color-option lightskyblue\" data-color=\"mediumslateblue\"></p>\n                    <p class=\"color-option lightgoldenrodyellow\" data-color=\"lightgoldenrodyellow\"></p>\n                </div>\n                            `\n        $notes.appendChild($note)\n    })\n}\n\nexport default renderNotes\n","import renderNotes from './display'\n\nconst editNote = (\n    $modalTitle: any,\n    $modalText: any,\n    $notes: any,\n    $placeholder: any,\n    state: any\n) => {\n    const note = state.notes.find((note: any) => note.id === state.id)\n    note.title = $modalTitle.value\n    note.text = $modalText.value\n    renderNotes($notes, $placeholder, state)\n}\n\nexport const changeColor = (event: any, state: any) => {\n    const noteElem = event.target.parentElement.parentElement.parentElement\n    state.id = noteElem.dataset.id\n\n    console.log(noteElem)\n}\n\nexport default editNote\n","import renderNotes from './display'\n\nconst deleteNote = (\n    event: any,\n    $notes: HTMLDivElement,\n    $placeholder: { style: { display: string } },\n    state: { id?: number; notes: any; trash: any }\n) => {\n    event.stopPropagation()\n    const $selectedNote = event?.target.closest('.note')\n    if (!$selectedNote) return\n    state.id = Number($selectedNote.dataset.id)\n\n    if (event.target.classList.contains('fa-trash')) {\n        const note = state.notes.find((note: any) => note.id === state.id)\n        const approve = confirm(\n            `Are you sure you want to delete ${note.title}?`\n        )\n        if (approve) {\n            state.trash.push(state.notes[state.notes.indexOf(note)])\n            state.notes.splice(state.notes.indexOf(note), 1)\n            console.log(state.trash)\n            renderNotes($notes, $placeholder, state)\n        }\n    }\n}\n\nexport default deleteNote\n","import renderNotes from './functions/display'\nimport deleteNote from './functions/remove'\nimport editNote, { changeColor } from './functions/edit'\n\nclass App {\n    state: any\n\n    $notes: HTMLDivElement | null\n    $form: any\n    $noteTitle: HTMLInputElement | null\n    $noteText: HTMLInputElement | null\n    $formButtons: any\n    $placeholder: any\n    $submitButton: HTMLButtonElement | null\n    $modal: any\n    $modalTitle: any\n    $modalText: any\n    $modalCloseButton: HTMLButtonElement | null\n    $modalDoneButton: HTMLButtonElement | null\n    $colorInput: any\n\n    constructor() {\n        this.state = {\n            notes: JSON.parse(window.localStorage.getItem('notes')) ?? [\n                {\n                    id: 2,\n                    title: 'Water Pokemon',\n                    text: 'Swarmpert',\n                    color: 'white',\n                },\n                {\n                    id: 1,\n                    title: 'Fire Pokemon',\n                    text: 'Blaziken',\n                    color: 'white',\n                },\n                {\n                    id: 3,\n                    title: 'Super Legendary',\n                    text: 'Mega Mewtwo Y',\n                    color: 'white',\n                },\n            ],\n            trash: JSON.parse(window.localStorage.getItem('trash')) ?? [],\n            id: 0,\n            meta: JSON.parse(window.localStorage.getItem('meta')) ?? {\n                theme: 'light',\n                lang: 'eng',\n            },\n        }\n\n        // Getting HTML elements\n        this.$notes ??= document.querySelector('#notes')\n        this.$form ??= document.querySelector('#form')\n        this.$noteTitle ??= document.querySelector('#note-title')\n        this.$noteText ??= document.querySelector('#note-text')\n        this.$formButtons ??= document.querySelector('#form-buttons')\n        this.$placeholder ??= document.querySelector('#placeholder')\n        this.$submitButton ??= document.querySelector('#submit-button')\n        this.$modal ??= document.querySelector('.modal')\n        this.$modalTitle ??= document.querySelector('.modal-title')\n        this.$modalText ??= document.querySelector('.modal-text')\n        this.$modalCloseButton ??= document.querySelector('#modal-close')\n        this.$modalDoneButton ??= document.querySelector('#modal-done')\n        this.$colorInput = document.getElementById('#color-tooltip')\n\n        this.addEventListeners()\n        renderNotes(this.$notes, this.$placeholder, this.state)\n    }\n\n    handleFormClick(event: Event) {\n        const isFormClicked = this.$form.contains(event.target)\n\n        isFormClicked ? this.openForm() : this.closeForm()\n    }\n\n    addEventListeners() {\n        document.body.addEventListener('click', (event: Event) => {\n            this.handleFormClick(event)\n            this.openModal(event)\n            deleteNote(event, this.$notes, this.$placeholder, this.state)\n            changeColor(event, this.state)\n        })\n\n        this.$submitButton.addEventListener('click', (event: Event) => {\n            event.preventDefault()\n            event.stopPropagation()\n            const title = this.$noteTitle.value\n            const text = this.$noteText.value\n            const color: string = '#ffffff'\n            const id: number = this.state.notes.length + 1\n\n            if (title && text) {\n                this.state.notes.push({ id, title, text, color })\n                renderNotes(this.$notes, this.$placeholder, this.state)\n                this.closeForm()\n            }\n        })\n\n        this.$modalCloseButton.addEventListener('click', (event: Event) => {\n            event.stopPropagation()\n            this.$modal.classList.remove('open-modal')\n        })\n        this.$modalDoneButton.addEventListener('click', (event: Event) => {\n            event.stopPropagation()\n            editNote(\n                this.$modalTitle,\n                this.$modalText,\n                this.$notes,\n                this.$placeholder,\n                this.state\n            )\n            this.$modal.classList.remove('open-modal')\n        })\n    }\n\n    openForm() {\n        this.$form.classList.add('form-open')\n        this.$noteTitle.style.display = 'block'\n        this.$formButtons.style.display = 'block'\n    }\n    closeForm() {\n        this.$form.classList.remove('form-open')\n        this.$noteTitle.style.display = 'none'\n        this.$formButtons.style.display = 'none'\n        this.$noteTitle.value = ''\n        this.$noteText.value = ''\n    }\n\n    openModal(event: any) {\n        event.stopPropagation()\n        if (event.target.classList.contains('fa-edit')) {\n            this.$modal.classList.add('open-modal')\n        }\n        const $selectedNote = event?.target.closest('.note')\n        if (!$selectedNote) return\n        const [$noteTitle, $noteText] = $selectedNote.children\n\n        if ($noteTitle && $noteText) {\n            this.$modalTitle.value = $noteTitle.innerText\n            this.$modalText.value = $noteText.innerText\n            this.state.id = Number($selectedNote.dataset.id)\n        }\n    }\n}\n\nexport default App\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(752);\n"],"names":["$notes","$placeholder","state","window","localStorage","setItem","JSON","stringify","notes","colors","Math","floor","random","length","innerHTML","style","display","forEach","note","$note","document","createElement","classList","add","dataset","id","background","color","title","text","appendChild","displayNotes","changeColor","event","noteElem","target","parentElement","console","log","$modalTitle","$modalText","find","value","stopPropagation","$selectedNote","closest","Number","contains","confirm","trash","push","indexOf","splice","this","parse","getItem","meta","theme","lang","querySelector","$form","$noteTitle","$noteText","$formButtons","$submitButton","$modal","$modalCloseButton","$modalDoneButton","$colorInput","getElementById","addEventListeners","handleFormClick","openForm","closeForm","body","addEventListener","openModal","preventDefault","remove","children","innerText","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call"],"sourceRoot":""}